/* ----------------------- */
/* -------- preps -------- */
/* ----------------------- */

body {
    margin: 0;

    overflow: hidden;
}

.sims-wrapper {
    box-sizing: border-box;

    padding: 20px 10px;

    display: flex;
    gap: 20px;

    height: 100vh;
    width: 100vw;

    background-size: 100px 100px;
}

.tiles-bg {
    overflow: hidden;

    position: relative;

    --color: #000;
}

.tiles-bg:after {
    content: "";

    --angle: 340deg;

    position: absolute;
    top: 50%;
    left: 50%;
    z-index: -10000;
    transform: translate(-50%, -50%) rotate(calc(var(--angle)));

    width: calc(100vw + 100vh);
    height: calc(100vw + 100vh);


    --width: 50px;
    --height: 50px;
    --gradient: linear-gradient(to top left, var(--color) 25.1%, transparent 0, transparent 74.9%, var(--color) 0);

    background:
        var(--gradient) 50% 50% / var(--width) var(--height),
        var(--gradient) calc(var(--width) / 2 + 50%) calc(var(--height) / 2 + 50%) / var(--width) var(--height);

    animation:
        move-tiles 1.5s linear infinite;
    /* change-angle 60s linear infinite; */ /* Please no, i'm Begging you */
}

@keyframes move-tiles {
    from {
        background:
            var(--gradient) 50% 50% / var(--width) var(--height),
            var(--gradient) calc(var(--width) / 2 + 50%) calc(var(--height) / 2 + 50%) / var(--width) var(--height);
    }

    to {
        background:
            var(--gradient) calc(50% + var(--width)) 50% / var(--width) var(--height),
            var(--gradient) calc(var(--width) / 2 * 3 + 50%) calc(var(--height) / 2 + 50%) / var(--width) var(--height);
    }
}

/* NEVER USE WITH move-tiles */
/* @keyframes change-angle {
    0% {
        transform: translate(-50%, -50%) rotate(calc(var(--angle)));
    }

    100% {
        transform: translate(-50%, -50%) rotate(calc(var(--angle) + 360deg));
    }
} */

.unselectable {
    user-select: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
}

/* --------------------- */
/* -------- gui -------- */
/* --------------------- */

.gui {
    --width: 564px;
    --padding: 20px;
    --extra-w: 200px;
    --extra-h: 75px;
    --cb-thickness: 5px;
    --cb-color: #050;
    
    box-sizing: border-box;

    position: absolute;
    top: 0;
    /* left: 0; */
    left: calc(-1 * var(--width));
    z-index: 200;

    width: calc(var(--width) + var(--extra-w));
    
    padding: var(--padding) 0 var(--padding) var(--padding);

    display: grid;

    background-color: #070c;
    color: #0f0;
    clip-path: polygon(0 0, 100% 0, 100% var(--extra-h), calc(100% - var(--extra-w)) var(--extra-h), calc(100% - var(--extra-w)) 100%, 0 100%);
    
    font-family: monospace;

    transition: left 0.25s ease;
    
    .gui__ribbon:before {
        content: "<<<  ";
    }
    
    .gui__ribbon:after {
        content: none;
    }
}

/* clip border */
.gui::before {
    content: "";

    position: absolute;
    left: 0;
    top: 0;
    z-index: -10;

    width: 100%;
    height: 100%;

    background-color: var(--cb-color);

    clip-path: polygon(
        0 0, 
        100% 0, 
        100% var(--extra-h), 
        calc(100% - var(--extra-w)) var(--extra-h), 
        calc(100% - var(--extra-w)) 100%, 
        0 100%,
        0 0,
        var(--cb-thickness) var(--cb-thickness),
        var(--cb-thickness) calc(100% - var(--cb-thickness)),
        calc(100% - var(--extra-w) - var(--cb-thickness)) calc(100% - var(--cb-thickness)),
        calc(100% - var(--extra-w) - var(--cb-thickness)) calc(var(--extra-h) - var(--cb-thickness)),
        calc(100% - var(--cb-thickness)) calc(var(--extra-h) - var(--cb-thickness)),
        calc(100% - var(--cb-thickness)) calc(var(--cb-thickness)),
        var(--cb-thickness) var(--cb-thickness)
        );
}

.gui__ribbon {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2;

    width: var(--extra-w);
    /* height: var(--extra-h); */

    /* margin: 0 0 0 auto; */
    margin: 0;
    padding: calc((var(--extra-h) - 1em) / 2) 0 ;

    /* color: white; */
    color: #ff0;
    font-size: 20px;
    line-height: 1;
    text-align: center;

    cursor: pointer;
}

.gui__ribbon:before,
.gui__ribbon:after {
    white-space: pre;
}

.gui:hover {
    left: 0;
}

.gui:hover .gui__ribbon:before,
.gui:hover .gui__ribbon:after {
    content: none;
}

.gui_locked {
    left: 0;
}

.gui.gui_locked .gui__ribbon:before,
.gui.gui_locked .gui__ribbon:after {
    /* content: " üîí "; */
    content: " ‚öìÔ∏è ";
}

.gui__section {
    width: calc(100% - var(--extra-w) - 3 * var(--padding));

    padding: 10px;

    display: grid;
    grid-template-columns: min-content auto;
    column-gap: 10px;

    border-top: 2.5px solid #050;
}

#bubbleGenerationSettings {
    grid-template-rows: auto;
    grid-auto-rows: 17px;
}

.gui__section:first-of-type {
    border-top: none;

    padding-top: 0;
}

.gui__sub-title {
    margin: 0 0 5px;
    
    font-size: 18px;
}

.gui__spread {
    grid-area: span 1 / span 2;
}

.gui__inner-flex {
    display: flex;
    gap: 5px;
    flex-wrap: wrap;
    align-items: baseline;
}

.gui__inner-grid {
    display: grid;
    grid-template-columns: min-content auto;
    column-gap: 10px;
    
    margin: 5px 0;
}

.gui__mini-title {
    margin: 0;
    
    font-size: 15px;
}

.gui__label,
.gui__input {
    justify-self: left;
    
    width: max-content;

    font-size: 12px;

    cursor: pointer;
}

.gui__input {
    background-color: transparent;
    color: #ff0;
}

.gui__input_number {
    width: 60px;

    cursor: text;
}

.gui__input_range {
    width: 140px;

    margin: 0;
}

.gui__input_button {
    /* width: 50px; */
    background-color: #32a553;
    color: #0f0;
}
/* .gui__input_button:hover,  */
.gui__input_button:active {
    color: #ff0;
}

.gui__input_checkbox {
    width: 1em;
    height: 1em;

    margin: 0;
}

.gui__label:has(.gui__input_radio:checked),
.gui__input_radio:checked + .gui__label {
    color: #ff0;
}

.gui__input_hue-picker {
    --hue: 0;

    position: relative;

    height: 6px;
    background: linear-gradient(to right, hsl(0, 100%, 50%), hsl(60, 100%, 50%), hsl(120, 100%, 50%), hsl(180, 100%, 50%), hsl(240, 100%, 50%), hsl(300, 100%, 50%), hsl(360, 100%, 50%));
    cursor: pointer;
    border-radius: 50rem;
}

.gui__input_hue-picker:before {
    content: "";

    position: absolute;
    top: 0;
    left: calc(var(--hue) / 360 * 100%);
    transform: translate(-25%, -25%);
    
    height: 250%;
    aspect-ratio: 1;
    
    border-radius: 50%;
    background-color: hsl(var(--hue), 100%, 50%);

    pointer-events: none;
}

#EndCycleCallbacks .gui__input_radio:disabled,
#EndCycleCallbacks .gui__input_radio:disabled + .gui__label {
    display: none;
}

/* ------------------------- */
/* -------- logging -------- */
/* ------------------------- */

.logging {
    --width: 259.3px;
    --padding: 20px;
    --extra-w: 120px;
    --extra-h: 40px;
    --cb-thickness: 5px;
    --cb-color: black;
    
    position: absolute;
    right: calc(-1 * var(--width));
    top: 0;
    z-index: 100;

    width: calc(var(--width) + var(--extra-w));

    display: flex;

    background-color: #444f;

    font-family: monospace;
    
    mask-image: linear-gradient(#fffa 0%, #fff8 20%, transparent 80%);

    transition: right 0.25s ease;

    clip-path: polygon(0 0, 100% 0, 100% 100%, var(--extra-w) 100%, var(--extra-w) var(--extra-h), 0 var(--extra-h));
}

.logging::before {
    content: "";

    position: absolute;
    left: 0;
    top: 0;
    z-index: -10;

    width: 100%;
    height: 100%;

    background-color: var(--cb-color);

    clip-path: polygon(
        0 0, 
        100% 0, 
        100% 100%, 
        var(--extra-w) 100%, 
        var(--extra-w) var(--extra-h), 
        0 var(--extra-h),
        0 0,
        var(--cb-thickness) var(--cb-thickness),
        var(--cb-thickness) calc(var(--extra-h) - var(--cb-thickness)),
        calc(var(--extra-w) + var(--cb-thickness)) calc(var(--extra-h) - var(--cb-thickness)),
        calc(var(--extra-w) + var(--cb-thickness)) calc(100% - var(--cb-thickness)),
        calc(100% - var(--cb-thickness)) calc(100% - var(--cb-thickness)),
        calc(100% - var(--cb-thickness)) var(--cb-thickness),
        var(--cb-thickness) var(--cb-thickness)
        );
}

.logging:hover,
.logging_locked {
    right: 0;
}

.logging__textarea {
    /* width: var(--width); */
    width: calc(var(--width) - 2 * var(--padding));
    min-height: 600px;

    padding: 0 var(--padding);
    border: none;

    background-color: transparent;

    font-family: monospace;
    font-size: 16px;
    color: white;

    white-space: pre;
    overflow: hidden;
    pointer-events: none;
}

.logging__textarea:focus {
    outline: none;
    border: none;
    appearance: none;
}


.logging__ribbon {
    display: block;

    width: var(--extra-w);
    height: 1em;
    
    padding: calc((var(--extra-h) - 1em) / 2) 0;

    text-align: center;
    line-height: 1;
    color: white;
    font-size: 18px;

    cursor: pointer;
}

.logging__ribbon:before,
.logging__ribbon:after {
    white-space: pre;
}

.logging__ribbon:after {
    content: "  >>>";
}

.logging:hover .logging__ribbon:before,
.logging:hover .logging__ribbon:after {
    content: none;
}

.logging.logging_locked .logging__ribbon:before,
.logging.logging_locked .logging__ribbon:after {
    /* content: " üîí "; */
    content: " ‚öìÔ∏è ";
}

.log-area_hidden {
    right: calc(0 - 100%);
}

/* ----------------------------------- */
/* -------- bubble-simulation -------- */
/* ----------------------------------- */


.bubble-simulation {
    height: 100%;

    flex-basis: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;

    opacity: 0.6;

    transition: opacity 0.4s ease;
}

.bubble-simulation_focused {
    opacity: 1;
}

.bubble-simulation__heading {
    width: fit-content;

    padding: 0 20px;
    margin: 20px auto;

    text-align: center;

    background-color: white;
    border: 4px solid black;
}

.bubble-simulation_focused .bubble-simulation__heading:before,
.bubble-simulation_focused .bubble-simulation__heading:after {
    white-space: pre;
}

.bubble-simulation_focused .bubble-simulation__heading:before {
    content: ">>>  ";
}

.bubble-simulation_focused .bubble-simulation__heading:after {
    content: "  <<<";
}



.bubbles-window {
    position: relative;

    flex-grow: 1;

    --frame-w: 10px;

    outline: var(--frame-w) solid var(--frame-col);

    width: calc(100% - 2 * var(--frame-w));
    flex-basis: calc(100% - 2 * var(--frame-w));

    overflow: hidden;

    transform: scale(1, -1);
}

.bubble-simulation_focused .bubbles-window {
    box-shadow: 0px 0px 0px 20px black;
}

.bubble {
    /* default values */
    --d: 50px;
    --x: calc(var(--d) * -1);
    --y: calc(var(--d) * -1);

    --hue: 300;
    --saturation: 100%;
    --luminosity: 30%;
    --alpha: 1;

    --highlight-offset: -17.5%;
    --highlight-lum: 80%;
    --highlight-alpha: 1;

    --shadow-diff: 0.5;
    --shadow-saturation: 50%;
    --shadow-alpha: 1;

    --opacity: 0.8;

    /* set up bubble's look */
    position: absolute;

    left: calc(var(--x) - var(--d) / 2);
    top: calc(var(--y) - var(--d) / 2);

    width: var(--d);
    height: var(--d);

    border-radius: 50%;

    --col: hsla(var(--hue), var(--saturation), var(--luminosity), var(--alpha));
    --col-highlight: hsla(var(--hue), var(--saturation), var(--highlight-lum), var(--highlight-alpha));
    --col-shadow: hsla(var(--hue), var(--shadow-saturation), calc(50% * (1 - var(--shadow-diff))), var(--shadow-alpha));

    --highlight-position: calc(50% + var(--highlight-offset)) calc(50% + var(--highlight-offset));
    --shadow-position: calc(50% - var(--highlight-offset)) calc(50% - var(--highlight-offset));

    background:
        radial-gradient(circle at var(--highlight-position), var(--col-highlight) 1%, #fff0 40%),
        radial-gradient(circle at 50% 0%, #0000, #0005 90%, #0009 100%),
        radial-gradient(circle at var(--shadow-position), #0000 10%, var(--col-shadow) 70%),
        linear-gradient(var(--col) 0%, var(--col) 100%);

    opacity: var(--opacity);

    transform: scale(1, -1);
}


/* ---------------------------------------------------------- */
/* --------- unused custom background bubble scetch --------- */
/* ---------------------------------------------------------- */

/* extention for regular plain-colored bubble */
.bubble_custom-bg {
    --shadow-saturation: 0%;

    --custom-bg-image: url(./custom_bgs/color-fluid.jpg);
    --custom-bg-highlight-lum: 5;

    background:
        radial-gradient(circle at 50% 0%, #0000, #0005 90%, #0009 100%),
        var(--custom-bg-image) center center / cover no-repeat;
}

/* boiler plate */
.bubble_custom-bg:before,
.bubble_custom-bg:after {
    content: "";

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
}

/* highlight for bubble_custom-bg */
.bubble_custom-bg:after {
    background: var(--custom-bg-image) center center / cover no-repeat;

    filter: brightness(var(--custom-bg-highlight-lum));

    mask-image: radial-gradient(circle at var(--highlight-position), hsla(0, 0%, 100%, var(--highlight-alpha)) 25%, #fff0 100%);
}

/* shadow for bubble_custom-bg */
.bubble_custom-bg:before {
    background: var(--custom-bg-image) center center / cover no-repeat;

    filter: brightness(0.5);

    mask-image: radial-gradient(circle at var(--highlight-position), #fff0 25%, hsla(0, 0%, 100%, var(--shadow-alpha)) 100%);
}